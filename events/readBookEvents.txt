namespace = event_readBook
##--------------------------------------------
###Going to the library  ----------------------
##--------------------------------------------
event_readBook.1000 = {
	title = event_readBook.1000.t
	theme = learning_scholarship_focus
	right_portrait = root
	desc = event_readBook.1000.desc
	immediate = {
		# Begins at the first ever event, and set the amount of books you've red to 0, if you haven't read books.
		if = {
			limit = {
				NOT = {
					has_variable = amount_of_books_read
				}
			}
			set_variable = {
				name = amount_of_books_read
				value = 0
			}
		}
	}
	# Bring a Bodyguard
	option = {
		name = event_readBook.1000.option.a.name
		trigger = {
			exists = scope:randomKnight
		}
		trigger_event = {
			on_action = event_onA_readBook_bringKnight
		}
	}
	#Go alone
	option = {
		name = event_readBook.1000.option.b.name
		trigger_event = {
			on_action = event_onA_readBook_goAlone
		}
	}
	#Bring a dynasty + courtier
	# option = {
	# 	name = event_readBook.1000.option.c.name
	# 	trigger = {
	# 		exists = scope:randomFamilyOrCourtier
	# 	}
	# 	trigger_event = {
	# 		on_action = event_onA_readBook_bringCourtier
	# 	}
	# }
}

##--------------------------------------------
###Bring knight to library --------------------
##--------------------------------------------
event_readBook.1100 = {
	title = event_readBook.1100.t
	desc = event_readBook.1100.desc
	theme = learning_scholarship_focus
	right_portrait = {
		character = root
		animation = personality_bold
	}
	left_portrait = {
		character = scope:randomKnight
		animation = personality_honorable
	}
	option = {
		name = event_readBook.1100.option.a.name
		add_character_modifier = {
			modifier = well_guarded
			days = 5
		}
		#Checks to see if you've read all the books.
		if = {
			limit = {
				var:amount_of_books_read >= 60				#AMOUNT_OF_BOOKS
			}
			#Something for when they are all read
		}
		else = {
			select_random_book_effect_for_event = yes
		}
	}
}

# event_readBook.1002 = {
# 	title = event_readBook.1002.t
# 	desc = event_readBook.1002.desc
# 	theme = learning_scholarship_focus
# 	right_portrait = {
# 		character = root
# 		animation = personality_bold
# 	}
# 	left_portrait = {
# 		character = scope:randomKnight
# 		animation = personality_honorable
# 	}
# 	option = {
# 		name = "Knight2"
# 	}
# }
# event_readBook.1003 = {
# 	title = event_readBook.1003.t
# 	desc = event_readBook.1003.desc
# 	theme = learning_scholarship_focus
# 	right_portrait = {
# 		character = root
# 		animation = personality_bold
# 	}
# 	left_portrait = {
# 		character = scope:randomKnight
# 		animation = personality_honorable
# 	}
# 	option = {
# 		name = "Knight3"
# 	}
# }
##----------------------------------
###Go alone to library ------------
##----------------------------------
event_readBook.1200 = {
	title = event_readBook.1200.t
	desc = event_readBook.1200.desc
	theme = learning_scholarship_focus
	right_portrait = {
		character = root
		animation = disbelief
	}
	lower_right_portrait = {
		character = scope:murderer
		animation = rage
	}
	lower_left_portrait = {
		character = scope:event_victim
		animation = beg
	}
	immediate = {
		hidden_effect = {
			create_character = {
				template = new_murderer_character
				employer = root
				save_scope_as = murderer
				after_creation = {
					set_to_lowborn = yes
					move_to_pool = yes
				}
			}
			create_character = {
				template = new_event_victim
				employer = root
				save_scope_as = event_victim
				after_creation = {
					set_to_lowborn = yes
					move_to_pool = yes
				}
			}
		}
	}
	#Don't intervene option
	option = {
		name = event_readBook.1200.option.a.name
		if = {
			limit = {
				OR = {
					has_trait = craven
					has_trait = arbitrary
					has_trait = deceitful
					has_trait = sadistic
				}
			}
			add_stress = -20
			# Add modifier, got away from a sticky situation?
		}
		else_if = {
			limit = {
				OR = {
					has_trait = just
					has_trait = brave
					has_trait = honest
				}
			}
			add_stress = 30
		}
		else = {
			add_stress = 15
			# Add modifier, ran away from a situation I should have intervened?
		}
		scope:event_victim = {
			death = {
				killer = scope:murderer
				death_reason = death_murder
			}
		}
	}
	#Intervene on behalf of the murderer option
	option = {
		name = event_readBook.1200.option.b.name
		if = {
			limit = {
				NOT = {
					OR = {
						has_trait = sadistic
						has_trait = arbitrary
						has_trait = wrathful
					}
				}
			}
			add_stress = 20
		}
		else = {
			add_stress = -20
		}
		trigger_event = {
			id = event_readBook.1201
		}
	}
	#Intervene on behalf of the event_victim option
	option = {
		name = event_readBook.1200.option.c.name
		trigger_event = {
			id = event_readBook.1220
		}
	}
}

##Help kill the victim
event_readBook.1201 = {
	title = event_readBook.1201.t
	desc = event_readBook.1201.desc
	theme = learning_scholarship_focus
	right_portrait = {
		character = root
		animation = personality_dishonorable
	}
	left_portrait = {
		character = scope:murderer
		animation = rage
	}
	#Have fun killing the victim
	option = {
		name = event_readBook.1201.option.a.name
		trigger_event = {
			id = event_readBook.1210
		}
		scope:event_victim = {
			death = {
				killer = scope:murderer
				death_reason = death_murder
			}
		}
	}
}

##Victim is killed, you can hire or not.
event_readBook.1210 = {
	title = event_readBook.1210.t
	desc = event_readBook.1210.desc
	theme = learning_scholarship_focus
	right_portrait = {
		character = root
		animation = rage
	}
	left_portrait = {
		character = scope:murderer
		animation = rage
	}
	#Hire the murderer, get hook
	option = {
		name = event_readBook.1210.option.a.name
		scope:murderer = {
			set_employer = root
		}
		add_hook = {
			target = scope:murderer
			type = favor_hook
		}
	}
	#Walk away
	option = {
		name = event_readBook.1210.option.b.name
		add_hook = {
			target = scope:murderer
			type = favor_hook
		}
	}
}

##Help the victim
event_readBook.1220 = {
	title = event_readBook.1220.t
	desc = event_readBook.1220.desc
	theme = learning_scholarship_focus
	right_portrait = {
		character = root
		animation = war_attacker
	}
	lower_right_portrait = {
		character = scope:event_victim
		animation = beg
	}
	lower_left_portrait = {
		character = scope:murderer
		animation = fear
	}
	#Fight the murderer
	option = {
		name = event_readBook.1220.option.a.name
		scope:event_victim = {
			set_employer = root
		}
		imprison = {
			target = scope:murderer
			type = dungeon
		}
	}
	option = {
		name = event_readBook.1220.option.b.name
		imprison = {
			target = scope:murderer
			type = dungeon
		}
	}
}

###Going to the study ----------------------
# event_readBook.1300 = {
# 	title = event_readBook.1300.t
# 	desc = event_readBook.1300.desc
# 	theme = learning_scholarship_focus
# 	right_portrait = root
# 	option = {
# 		trigger = {
# 			NOT = {
# 				exists = scope:randomCourtier
# 			}
# 		}
# 		name = event_readBook.1300.option.a.name
# 	}
# 	option = {
# 		name = event_readBook.1300.option.b.name
# 	}
# }